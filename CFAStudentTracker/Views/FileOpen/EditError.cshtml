@model CFAStudentTracker.Models.ProcessingError

@{
    ViewBag.Title = "Edit Error";
}

<h2>Edit Error</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Processing Error</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ErrorID)

        @Html.HiddenFor(model => model.ProcID)

        <div class="form-group">
            @Html.LabelFor(model => model.ErrorTypeID, "ErrorTypeID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ErrorTypeID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ErrorTypeID, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.DateFound)

        @Html.HiddenFor(model => model.DateComplete)

        <div class="form-group">
            @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.Hidden("mainReturn", new { mainReturn = ViewBag.mainReturn })

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    <button type="button" class="btn btn-link" onclick="history.go(-1)">
        Back
    </button>
</div>
